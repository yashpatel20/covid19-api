{"version":3,"sources":["Components/State.js","Components/Country.js","Pages/Home.js","Pages/SafetyPrecautions.js","Pages/Helpline.js","Pages/LatestUpdates.js","Components/Charts/StateChart.js","Components/Charts/CountryChart.js","Components/Charts/TimeSeriesChart.js","Pages/DeepDive.js","Components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["styles","makeStyles","heading","textAlign","table","minWidth","subHeading","marginBottom","blockGrid","block","display","flexDirection","justifyContent","alignItems","minHeight","blockText","dataText","paddingLeft","paddingRight","divider","State","classes","useState","stateData","setStateData","India","setIndia","useEffect","getStateData","a","axios","get","response","india","data","length","newCases","Cases","replace","newIndia","slice","rowsState","map","state","TableRow","key","TableCell","component","scope","align","Typography","variant","color","Deaths","Recovered","Grid","item","xs","sm","className","gutterBottom","container","spacing","Paper","TableContainer","Table","size","aria-label","TableHead","TableBody","Country","countryData","setCountryData","World","setWorld","getCountryData","world","rowsCountry","country","maingrid","Home","lastUpdate","setLastUpdate","getLastUpdate","Divider","SafetyPrecautions","Helpline","LatestUpdates","Chart","defaults","global","defaultFontColor","defaultFontFamily","defaultFontSize","labels","forEach","push","dataset","datasets","label","backgroundColor","options","legend","CountryChart","res","cases","parseInt","console","log","scales","yAxes","ticks","beginAtZero","TimeSeriesChart","type","timeSeries","setTimeSeries","getTimeSeriesData","ts","Date","fill","xAxes","min","max","undefined","precision","callback","value","index","values","DeepDive","timeSeriesAxis","setTimeSeriesAxis","Fade","in","window","location","pathname","timeout","style","padding","StateChart","Button","marginTop","marginRight","onClick","marginLeft","button","Navbar","AppBar","Toolbar","Link","to","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.40560892.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//mui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 10,\n  },\n  blockGrid: {\n    marginBottom: 15,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 50,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 10,\n  },\n});\n\nconst State = () => {\n  const classes = styles();\n\n  const [stateData, setStateData] = useState([]);\n  const [India, setIndia] = useState({});\n\n  useEffect(() => {\n    getStateData();\n  }, []);\n\n  const getStateData = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const india = response.data[response.data.length - 3];\n    const newCases = india.Cases.replace(/[*]/g, \"\");\n    const newIndia = {\n      ...india,\n      Cases: newCases,\n    };\n    setIndia(newIndia);\n    const data = response.data.slice(0, response.data.length - 3);\n    data[0].State = \"Andaman and Nicobar\";\n    setStateData(data);\n  };\n\n  const rowsState = stateData.map((state) => (\n    <TableRow key={state.State}>\n      <TableCell component=\"th\" scope=\"row\">\n        {state.State}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\">{state.Cases}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"secondary\">\n          {state.Deaths}\n        </Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"primary\">\n          {state.Recovered}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <Typography className={classes.subHeading} variant=\"h5\" gutterBottom>\n        India Overview\n      </Typography>\n      <Grid className={classes.blockGrid} container spacing={1}>\n        <Grid item xs>\n          <Paper className={classes.block}>\n            <Typography className={classes.blockText} variant=\"body1\">\n              Total Cases\n            </Typography>\n            <Typography className={classes.dataText} variant=\"h5\">\n              {India.Cases}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.block}>\n            <Typography className={classes.blockText} variant=\"body1\">\n              Deaths\n            </Typography>\n            <Typography\n              className={classes.dataText}\n              color=\"secondary\"\n              variant=\"h5\"\n            >\n              {India.Deaths}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.block}>\n            <Typography className={classes.blockText} variant=\"body1\">\n              Recovered\n            </Typography>\n            <Typography\n              className={classes.dataText}\n              color=\"primary\"\n              variant=\"h5\"\n            >\n              {India.Recovered}\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense table\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>State</TableCell>\n              <TableCell align=\"right\">Cases</TableCell>\n              <TableCell align=\"right\">Deaths</TableCell>\n              <TableCell align=\"right\">Recovered</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{rowsState}</TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n};\n\nexport default State;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//mui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 10,\n  },\n  blockGrid: {\n    marginBottom: 15,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 50,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 10,\n  },\n});\n\nconst Country = () => {\n  const classes = styles();\n\n  const [countryData, setCountryData] = useState([]);\n  const [World, setWorld] = useState({});\n\n  useEffect(() => {\n    getCountryData();\n  }, []);\n\n  const getCountryData = async () => {\n    const response = await axios.get(\"/api/covid19/World\");\n    const world = response.data[0];\n    setWorld(world);\n    const data = response.data.slice(1);\n    setCountryData(data);\n  };\n\n  const rowsCountry = countryData.map((country) => (\n    <TableRow key={country.Country}>\n      <TableCell component=\"th\" scope=\"row\">\n        {country.Country}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\">{country.Cases}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"secondary\">\n          {country.Deaths}\n        </Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"primary\">\n          {country.Recovered}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <Grid container spacing={5}>\n        <Grid item xs={12}>\n          <Typography className={classes.subHeading} variant=\"h5\" gutterBottom>\n            World Overview\n          </Typography>\n          <Grid className={classes.blockGrid} container spacing={1}>\n            <Grid item xs>\n              <Paper className={classes.block}>\n                <Typography className={classes.blockText} variant=\"body1\">\n                  Total Cases\n                </Typography>\n                <Typography className={classes.dataText} variant=\"h5\">\n                  {World.Cases}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs>\n              <Paper className={classes.block}>\n                <Typography className={classes.blockText} variant=\"body1\">\n                  Deaths\n                </Typography>\n                <Typography\n                  className={classes.dataText}\n                  color=\"secondary\"\n                  variant=\"h5\"\n                >\n                  {World.Deaths}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs>\n              <Paper className={classes.block}>\n                <Typography className={classes.blockText} variant=\"body1\">\n                  Recovered\n                </Typography>\n                <Typography\n                  className={classes.dataText}\n                  color=\"primary\"\n                  variant=\"h5\"\n                >\n                  {World.Recovered}\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n\n          <TableContainer component={Paper}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Country</TableCell>\n                  <TableCell align=\"right\">Cases</TableCell>\n                  <TableCell align=\"right\">Deaths</TableCell>\n                  <TableCell align=\"right\">Recovered</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rowsCountry}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Country;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n//Components\nimport State from \"../Components/State\";\nimport Country from \"../Components/Country\";\n\n//mui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 15,\n  },\n  blockGrid: {\n    marginBottom: 10,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 70,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 20,\n  },\n  maingrid: {\n    paddingLeft: 100,\n    paddingRight: 100,\n  },\n});\n\nconst Home = () => {\n  const classes = styles();\n  const [lastUpdate, setLastUpdate] = useState(\"\");\n\n  useEffect(() => {\n    getLastUpdate();\n  }, []);\n\n  const getLastUpdate = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const lastUpdate = response.data[response.data.length - 1].State;\n    setLastUpdate(lastUpdate);\n  };\n\n  return (\n    <div className={classes.maingrid}>\n      <Typography className={classes.heading} variant=\"h3\" gutterBottom>\n        India Covid-19 Tracker\n        <Typography variant=\"body2\">({lastUpdate})</Typography>\n      </Typography>\n      <Divider className={classes.divider} />\n      <Grid container spacing={3}>\n        <State />\n        <Country />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst SafetyPrecautions = () => {\n  return <div>SafetyPrecautions</div>;\n};\n\nexport default SafetyPrecautions;\n","import React from \"react\";\n\nconst Helpline = () => {\n  return <div>Helpline</div>;\n};\n\nexport default Helpline;\n","import React from \"react\";\n\nconst LatestUpdates = () => {\n  return <div>LatestUpdates</div>;\n};\n\nexport default LatestUpdates;\n","import React, { useEffect, useState } from \"react\";\nimport { Doughnut, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Chart = () => {\n  const [stateData, setStateData] = useState([]);\n  useEffect(() => {\n    getStateData();\n  }, []);\n\n  const getStateData = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const data = response.data.slice(1);\n    setStateData(data);\n  };\n\n  //chart js\n  defaults.global.defaultFontColor = \"#212121\";\n  defaults.global.defaultFontFamily = \"Roboto\";\n  defaults.global.defaultFontSize = 12;\n\n  const labels = [];\n  const data = [];\n  stateData.forEach((state) => {\n    labels.push(state.State);\n    data.push(state.Cases);\n  });\n\n  //const finalData = data.sort((a, b) => b - a);\n\n  const colors = [\n    \"#00429d\",\n    \"#1f4ea3\",\n    \"#305ba9\",\n    \"#3e67ae\",\n    \"#4a74b4\",\n    \"#5681b9\",\n    \"#618fbf\",\n    \"#6d9cc4\",\n    \"#79a9c9\",\n    \"#85b7ce\",\n    \"#93c4d2\",\n    \"#a1d1d7\",\n    \"#b1dfdb\",\n    \"#c3ebde\",\n    \"#daf7e1\",\n    \"#ffeed3\",\n    \"#ffdcc6\",\n    \"#ffcab9\",\n    \"#ffb8ab\",\n    \"#ffa59e\",\n    \"#fd9291\",\n    \"#f78085\",\n    \"#f06f7a\",\n    \"#e75d6f\",\n    \"#dd4c65\",\n    \"#d23b5b\",\n    \"#c52a52\",\n    \"#b61849\",\n    \"#a60741\",\n    \"#93003a\",\n    // \"#9CB4E8\",\n    // \"#2E2D54\",\n    // \"#187882\",\n    // \"#46820B\",\n    // \"#6D2F02\",\n    // \"#1B74D7\",\n    // \"#96D2CC\",\n    // \"#36B2CC\",\n    // \"#425C70\",\n    // \"#BA5021\",\n    // \"#D1F68E\",\n    // \"#2F4278\",\n    // \"#2C741D\",\n    // \"#69238C\",\n    // \"#3BE6CF\",\n    // \"#9EA76C\",\n    // \"#6B3109\",\n    // \"#FAC57F\",\n    // \"#D75476\",\n    // \"#006F8B\",\n    // \"#E8BAE3\",\n    // \"#76A692\",\n    // \"#2D2541\",\n    // \"#94131A\",\n    // \"#8F9291\",\n    // \"#4A0593\",\n    // \"#9FA25E\",\n    // \"#D53A18\",\n    // \"#37E0F7\",\n    // \"#1D6425\",\n    // \"#10B395\",\n    // \"#DF2FF7\",\n  ];\n  const datasets = [\n    {\n      label: \"state data\",\n      backgroundColor: colors,\n      data: data,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n  };\n\n  return (\n    <div>\n      <Doughnut data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst CountryChart = () => {\n  const [countryData, setCountryData] = useState([]);\n  useEffect(() => {\n    getCountryData();\n  }, []);\n\n  const getCountryData = async () => {\n    const response = await axios.get(\"/api/covid19/World\");\n    const data = response.data.slice(1, 19);\n    const res = await axios.get(\"/api/covid19/India\");\n    const india = res.data[res.data.length - 3];\n    data.push({\n      Country: india.State,\n      Cases: india.Cases,\n      Deaths: india.Deaths,\n      Recovered: india.Recovered,\n    });\n    setCountryData(data);\n  };\n\n  //chart js\n\n  const labels = [];\n  const data = [];\n  countryData.forEach((country) => {\n    labels.push(country.Country);\n    const cases = country.Cases.replace(/,/g, \"\");\n    data.push(parseInt(cases, 10));\n  });\n\n  console.log(data);\n  const colors = [\n    \"#ff0000\",\n    \"#ff2c00\",\n    \"#ff4100\",\n    \"#ff5000\",\n    \"#ff5d00\",\n    \"#ff6900\",\n    \"#ff7400\",\n    \"#fe7e00\",\n    \"#fd8900\",\n    \"#fa9400\",\n    \"#f79e00\",\n    \"#f2a900\",\n    \"#edb300\",\n    \"#e6be00\",\n    \"#ddc800\",\n    \"#d0d300\",\n    \"#bfdf00\",\n    \"#a2ec00\",\n    \"#00ff00\",\n  ];\n  const datasets = [\n    {\n      label: \"country data\",\n      backgroundColor: colors,\n      data: data,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <Bar data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default CountryChart;\n","import React, { useEffect, useState } from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst TimeSeriesChart = ({ type }) => {\n  const [timeSeries, setTimeSeries] = useState([]);\n  useEffect(() => {\n    getTimeSeriesData();\n  }, []);\n\n  const getTimeSeriesData = async () => {\n    const response = await axios.get(\"/api/covid19/IndiaTS\");\n    setTimeSeries(response.data);\n  };\n\n  //TODO defaults in one place\n  defaults.global.defaultFontColor = \"#212121\";\n  defaults.global.defaultFontFamily = \"Roboto\";\n  defaults.global.defaultFontSize = 12;\n\n  const labels = [];\n  const data = [];\n  timeSeries.forEach((ts) => {\n    labels.push(ts.Date);\n    const cases = ts.Cases.replace(/,/g, \"\");\n    data.push(parseInt(cases));\n  });\n\n  console.log(data);\n\n  const datasets = [\n    {\n      label: \"Cases\",\n      backgroundColor: \"#673ab7\",\n      data: data,\n      fill: true,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const yaxes =\n    type === \"linear\"\n      ? {\n          type: type,\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n        }\n      : {\n          type: type,\n          ticks: {\n            min: 0,\n            max: 100000,\n            callback: function (value, index, values) {\n              if (value === 100000) return \"100000\";\n              if (value === 10000) return \"10000\";\n              if (value === 1000) return \"1000\";\n              if (value === 100) return \"100\";\n              if (value === 10) return \"10\";\n              if (value === 0) return \"0\";\n              return null;\n            },\n          },\n        };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: \"2020-03-03\",\n          },\n        },\n      ],\n      yAxes: [yaxes],\n    },\n  };\n\n  return (\n    <div>\n      <Line data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default TimeSeriesChart;\n","import React, { useState } from \"react\";\nimport StateChart from \"../Components/Charts/StateChart\";\nimport CountryChart from \"../Components/Charts/CountryChart\";\nimport TimeSeriesChart from \"../Components/Charts/TimeSeriesChart\";\n\n//MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst DeepDive = () => {\n  const [timeSeriesAxis, setTimeSeriesAxis] = useState(\"linear\");\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={2000}>\n          <div>\n            <Paper>\n              <div style={{ padding: 5 }}>\n                <Typography\n                  style={{ textAlign: \"center\", marginBottom: 5 }}\n                  variant=\"body1\"\n                >\n                  Cases in Indian States\n                </Typography>\n                <StateChart />\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={3000}>\n          <div>\n            <Paper>\n              <div style={{ padding: 5 }}>\n                <Typography\n                  style={{ textAlign: \"center\", marginBottom: 5 }}\n                  variant=\"body1\"\n                >\n                  Cases in Most Affected Countries\n                </Typography>\n                <CountryChart />\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={4000}>\n          <div>\n            <Paper>\n              <Typography\n                style={{ textAlign: \"center\", marginBottom: 5 }}\n                variant=\"body1\"\n              >\n                Time Series of Indian Cases\n              </Typography>\n              <TimeSeriesChart type={timeSeriesAxis} />\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <Button\n                  style={{ marginTop: 10, marginRight: 5, marginBottom: 5 }}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => setTimeSeriesAxis(\"linear\")}\n                >\n                  Linear\n                </Button>\n                <Button\n                  style={{ marginTop: 10, marginLeft: 5, marginBottom: 5 }}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={() => setTimeSeriesAxis(\"logarithmic\")}\n                >\n                  Logarithmic\n                </Button>\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={5000}>\n          <div>Chart 4 here</div>\n        </Fade>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DeepDive;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n//MUI\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles({\n  button: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n});\n\nconst Navbar = () => {\n  const classes = styles();\n  return (\n    <AppBar className=\"nav\">\n      <Toolbar className=\"nav-container\">\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/\"\n        >\n          Home\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/DeepDive\"\n        >\n          Deep Dive\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/SafetyPrecautions\"\n        >\n          Safety Precautions\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/Helpline\"\n        >\n          Helpline\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/LatestUpdates\"\n        >\n          Latest Updates\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//Pages\nimport Home from \"./Pages/Home\";\nimport SafetyPrecautions from \"./Pages/SafetyPrecautions\";\nimport Helpline from \"./Pages/Helpline\";\nimport LatestUpdates from \"./Pages/LatestUpdates\";\nimport DeepDive from \"./Pages/DeepDive\";\n\n//Components\nimport Navbar from \"./Components/Navbar\";\n\n//MUI\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/LatestUpdates\">\n              <LatestUpdates />\n            </Route>\n            <Route path=\"/DeepDive\">\n              <DeepDive />\n            </Route>\n            <Route path=\"/Helpline\">\n              <Helpline />\n            </Route>\n            <Route path=\"/SafetyPrecautions\">\n              <SafetyPrecautions />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
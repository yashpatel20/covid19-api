{"version":3,"sources":["Components/State.js","Components/Country.js","Components/Charts/TimeSeriesChart.js","Components/TimeSeries.js","Pages/Home.js","Pages/SafetyPrecautions.js","utils/helplineData.js","Pages/Helpline.js","Pages/LatestUpdates.js","Components/Charts/StateChart.js","Components/Charts/CountryChart.js","Components/Charts/DeathRecovereChart.js","Components/Charts/DailyCasesChart.js","Pages/DeepDive.js","Pages/World.js","Components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["styles","makeStyles","heading","textAlign","table","minWidth","subHeading","marginBottom","blockGrid","block","display","flexDirection","justifyContent","alignItems","minHeight","blockText","dataText","paddingLeft","paddingRight","divider","State","classes","useState","stateData","setStateData","India","setIndia","useEffect","getStateData","a","axios","get","response","india","data","length","newCases","Cases","replace","newIndia","slice","rowsState","map","state","TableRow","key","TableCell","component","scope","align","Typography","variant","color","Deaths","Recovered","Grid","item","xs","sm","className","gutterBottom","container","spacing","Paper","TableContainer","Table","size","aria-label","TableHead","TableBody","Country","countryData","setCountryData","World","setWorld","getCountryData","world","rowsCountry","country","TimeSeriesChart","type","timeSeries","defaults","global","defaultFontColor","defaultFontFamily","defaultFontSize","labels","forEach","ts","console","log","push","Date","cases","parseInt","dataset","datasets","label","backgroundColor","borderColor","fill","options","legend","scales","xAxes","ticks","min","yAxes","beginAtZero","max","undefined","precision","callback","value","index","values","chart","padding","TimeSeries","timeSeriesAxis","setTimeSeriesAxis","dataCases","setDataCases","dataDeaths","setDataDeaths","dataRecovered","setDataRecoverd","getData","FormControlLabel","style","control","Switch","onChange","event","maingrid","Home","lastUpdate","setLastUpdate","getLastUpdate","Divider","text","card","position","image","borderRadius","content","objectFit","SafetyPrecautions","Card","CardContent","varaint","helplineData","Helpline","rows","LatestUpdates","Chart","CountryChart","res","DeathRecoveredChart","dataOfDeaths","dataOfRecovered","deaths","recovered","DailyCasesChart","dailyCasesData","setDailyCasesData","getDailyCasesData","prev","daily","DeepDive","Fade","in","window","location","pathname","timeout","StateChart","button","marginLeft","marginRight","Navbar","AppBar","Toolbar","Button","Link","to","Tooltip","title","placement","IconButton","fontSize","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.042ec37f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//mui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 10,\n  },\n  blockGrid: {\n    marginBottom: 15,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 70,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 10,\n  },\n});\n\nconst State = () => {\n  const classes = styles();\n\n  const [stateData, setStateData] = useState([]);\n  const [India, setIndia] = useState({});\n\n  useEffect(() => {\n    getStateData();\n  }, []);\n\n  const getStateData = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const india = response.data[response.data.length - 3];\n    const newCases = india.Cases.replace(/[*]/g, \"\");\n    const newIndia = {\n      ...india,\n      Cases: newCases,\n    };\n    setIndia(newIndia);\n    const data = response.data.slice(0, response.data.length - 3);\n    data[0].State = \"Andaman and Nicobar\";\n    setStateData(data);\n  };\n\n  const rowsState = stateData.map((state) => (\n    <TableRow key={state.State}>\n      <TableCell component=\"th\" scope=\"row\">\n        {state.State}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\">{state.Cases}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"secondary\">\n          {state.Deaths}\n        </Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"primary\">\n          {state.Recovered}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <Typography className={classes.subHeading} variant=\"h5\" gutterBottom>\n        INDIA OVERVIEW\n      </Typography>\n      <Grid className={classes.blockGrid} container spacing={1}>\n        <Grid item xs>\n          <Paper className={classes.block}>\n            <Typography className={classes.blockText} variant=\"body1\">\n              Total Cases\n            </Typography>\n            <Typography className={classes.dataText} variant=\"h5\">\n              {India.Cases}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.block}>\n            <Typography className={classes.blockText} variant=\"body1\">\n              Deaths\n            </Typography>\n            <Typography\n              className={classes.dataText}\n              color=\"secondary\"\n              variant=\"h5\"\n            >\n              {India.Deaths}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.block}>\n            <Typography className={classes.blockText} variant=\"body1\">\n              Recovered\n            </Typography>\n            <Typography\n              className={classes.dataText}\n              color=\"primary\"\n              variant=\"h5\"\n            >\n              {India.Recovered}\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense table\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>State</TableCell>\n              <TableCell align=\"right\">Cases</TableCell>\n              <TableCell align=\"right\">Deaths</TableCell>\n              <TableCell align=\"right\">Recovered</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{rowsState}</TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n};\n\nexport default State;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//mui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 10,\n  },\n  blockGrid: {\n    marginBottom: 15,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 70,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 10,\n  },\n});\n\nconst Country = () => {\n  const classes = styles();\n\n  const [countryData, setCountryData] = useState([]);\n  const [World, setWorld] = useState({});\n\n  useEffect(() => {\n    getCountryData();\n  }, []);\n\n  const getCountryData = async () => {\n    const response = await axios.get(\"/api/covid19/World\");\n    const world = response.data[0];\n    setWorld(world);\n    const data = response.data.slice(1);\n    setCountryData(data);\n  };\n\n  const rowsCountry = countryData.map((country) => (\n    <TableRow key={country.Country}>\n      <TableCell component=\"th\" scope=\"row\">\n        {country.Country}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\">{country.Cases}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"secondary\">\n          {country.Deaths}\n        </Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\" color=\"primary\">\n          {country.Recovered}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <Grid item xs={12}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography className={classes.subHeading} variant=\"h5\" gutterBottom>\n            WORLD OVERVIEW\n          </Typography>\n          <Grid className={classes.blockGrid} container spacing={1}>\n            <Grid item xs>\n              <Paper className={classes.block}>\n                <Typography className={classes.blockText} variant=\"body1\">\n                  Total Cases\n                </Typography>\n                <Typography className={classes.dataText} variant=\"h5\">\n                  {World.Cases}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs>\n              <Paper className={classes.block}>\n                <Typography className={classes.blockText} variant=\"body1\">\n                  Deaths\n                </Typography>\n                <Typography\n                  className={classes.dataText}\n                  color=\"secondary\"\n                  variant=\"h5\"\n                >\n                  {World.Deaths}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs>\n              <Paper className={classes.block}>\n                <Typography className={classes.blockText} variant=\"body1\">\n                  Recovered\n                </Typography>\n                <Typography\n                  className={classes.dataText}\n                  color=\"primary\"\n                  variant=\"h5\"\n                >\n                  {World.Recovered}\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n\n          <TableContainer component={Paper}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Country</TableCell>\n                  <TableCell align=\"right\">Cases</TableCell>\n                  <TableCell align=\"right\">Deaths</TableCell>\n                  <TableCell align=\"right\">Recovered</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rowsCountry}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Country;\n","import React, { useEffect, useState } from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst TimeSeriesChart = ({ type, timeSeries, color }) => {\n  //TODO defaults in one place\n  defaults.global.defaultFontColor = \"#212121\";\n  defaults.global.defaultFontFamily = \"Roboto\";\n  defaults.global.defaultFontSize = 12;\n\n  const labels = [];\n  const data = [];\n  timeSeries.forEach((ts) => {\n    console.log(ts);\n    labels.push(ts.Date);\n    const cases = ts.Cases.replace(/,/g, \"\");\n    data.push(parseInt(cases));\n  });\n\n  const datasets = [\n    {\n      label: \"Cases\",\n      backgroundColor: color,\n      borderColor: color,\n      data: data,\n      fill: false,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const yaxes =\n    type === \"linear\"\n      ? {\n          type: type,\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n        }\n      : {\n          type: type,\n          ticks: {\n            min: 0,\n            max: 100000,\n            callback: function (value, index, values) {\n              if (value === 100000) return \"100000\";\n              if (value === 10000) return \"10000\";\n              if (value === 1000) return \"1000\";\n              if (value === 100) return \"100\";\n              if (value === 10) return \"10\";\n              if (value === 0) return \"0\";\n              return null;\n            },\n          },\n        };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: \"03-03\",\n          },\n        },\n      ],\n      yAxes: [yaxes],\n    },\n  };\n\n  return (\n    <div>\n      <Line data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default TimeSeriesChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TimeSeriesChart from \"../Components/Charts/TimeSeriesChart\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst styles = makeStyles({\n  subHeading: {\n    marginBottom: 10,\n  },\n  chart: {\n    padding: 10,\n  },\n});\n\nconst TimeSeries = () => {\n  const classes = styles();\n  const [timeSeriesAxis, setTimeSeriesAxis] = useState(\"linear\");\n  const [checked, setChecked] = useState(false);\n  const [dataCases, setDataCases] = useState([]);\n  const [dataDeaths, setDataDeaths] = useState([]);\n  const [dataRecovered, setDataRecoverd] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    const response = await axios.get(\"/api/covid19/IndiaTS\");\n    const dataCases = response.data.map((item) => {\n      const container = {};\n      container.Date = item.Date.slice(5);\n      container.Cases = item.Cases;\n      return container;\n    });\n    const dataDeaths = response.data.map((item) => {\n      const container = {};\n      container.Date = item.Date.slice(5);\n      container.Cases = item.Deaths;\n      return container;\n    });\n    const dataRecovered = response.data.map((item) => {\n      const container = {};\n      container.Date = item.Date.slice(5);\n      container.Cases = item.Recovered;\n      return container;\n    });\n    setDataCases(dataCases);\n    setDataDeaths(dataDeaths);\n    setDataRecoverd(dataRecovered);\n  };\n\n  const handleChange = (event) => {\n    if (timeSeriesAxis === \"logarithmic\") {\n      setTimeSeriesAxis(\"linear\");\n    } else {\n      setTimeSeriesAxis(\"logarithmic\");\n    }\n  };\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <Typography className={classes.subHeading} variant=\"h5\" gutterBottom>\n        SPREAD TRENDS\n      </Typography>\n      <FormControlLabel\n        style={{ marginBottom: 10 }}\n        control={<Switch color=\"primary\" onChange={handleChange} />}\n        label=\"Logarithmic\"\n      />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper>\n            <div className={classes.chart}>\n              <Typography\n                style={{ textAlign: \"center\", marginBottom: 5 }}\n                variant=\"body1\"\n              >\n                Cases\n              </Typography>\n              <TimeSeriesChart\n                type={timeSeriesAxis}\n                timeSeries={dataCases}\n                color=\"#000\"\n              />\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <div className={classes.chart}>\n              <Typography\n                style={{ textAlign: \"center\", marginBottom: 5 }}\n                variant=\"body1\"\n              >\n                Deaths\n              </Typography>\n              <TimeSeriesChart\n                type={timeSeriesAxis}\n                timeSeries={dataDeaths}\n                color=\"#f50057\"\n              />\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper>\n            <div className={classes.chart}>\n              <Typography\n                style={{ textAlign: \"center\", marginBottom: 5 }}\n                variant=\"body1\"\n              >\n                Recovered\n              </Typography>\n              <TimeSeriesChart\n                type={timeSeriesAxis}\n                timeSeries={dataRecovered}\n                color=\"#3f51b5\"\n              />\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nexport default TimeSeries;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n//Components\nimport State from \"../Components/State\";\nimport Country from \"../Components/Country\";\nimport TimeSeries from \"../Components/TimeSeries\";\n\n//mui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 15,\n  },\n  blockGrid: {\n    marginBottom: 10,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 70,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 20,\n  },\n  maingrid: {\n    paddingLeft: 25,\n    paddingRight: 25,\n  },\n});\n\nconst Home = () => {\n  const classes = styles();\n  const [lastUpdate, setLastUpdate] = useState(\"\");\n\n  useEffect(() => {\n    getLastUpdate();\n  }, []);\n\n  const getLastUpdate = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const lastUpdate = response.data[response.data.length - 1].State;\n    setLastUpdate(lastUpdate);\n  };\n\n  return (\n    <div className={classes.maingrid}>\n      <Typography className={classes.heading} variant=\"h4\" gutterBottom>\n        COVID-19 TRACKER\n        <Typography variant=\"body2\">({lastUpdate})</Typography>\n      </Typography>\n      <Divider className={classes.divider} />\n      <Grid container spacing={3}>\n        <State />\n        <TimeSeries />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Fragment } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst styles = makeStyles({\n  text: {\n    paddingLeft: 4,\n  },\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    padding: 5,\n  },\n  divider: {\n    marginBottom: 20,\n  },\n  image: {\n    minWidth: 80,\n    minHeight: 80,\n    borderRadius: \"50%\",\n  },\n  content: {\n    padding: 5,\n    paddingLeft: 20,\n    objectFit: \"cover\",\n  },\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 15,\n  },\n  blockGrid: {\n    marginBottom: 10,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 70,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  maingrid: {\n    paddingLeft: 25,\n    paddingRight: 25,\n  },\n});\n\nconst SafetyPrecautions = () => {\n  const classes = styles();\n  return (\n    <Fragment>\n      <Typography\n        style={{ marginBottom: 10 }}\n        variant=\"h4\"\n        className={classes.heading}\n      >\n        FIVE STEPS TO PREVENT COVID-19\n      </Typography>\n      <Divider className={classes.divider} />\n      <Grid className={classes.maingrid} container spacing={3}>\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"primary\" variant=\"h5\">\n                1. HANDS\n              </Typography>\n              <Typography className={classes.text} varaint=\"body1\">\n                It starts with your hands. Please wash your hands frequently\n                with soap and water or an alcohol-based solution\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"primary\" variant=\"h5\">\n                2. ELBOW\n              </Typography>\n              <Typography className={classes.text} varaint=\"h5\">\n                Cover your nose and mouth with a bent elbow or tissue when you\n                sneeze or cough. Dispose of tissue immdiately and wash hands.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"primary\" variant=\"h5\">\n                3. FACE\n              </Typography>\n              <Typography className={classes.text} varaint=\"h5\">\n                Avoid touching your face, particularly your eyes, nose or mouth\n                to prevent virus from entering your body.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"primary\" variant=\"h5\">\n                4. DISTANCE\n              </Typography>\n              <Typography className={classes.text} varaint=\"h5\">\n                In terms of social interactions, take a step back. Stay atleast\n                one meter distance from others.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"primary\" variant=\"h5\">\n                5. FEEL\n              </Typography>\n              <Typography className={classes.text} varaint=\"h5\">\n                If you feel unwell, stay home. Please follow all instructions\n                provided by your local health authorities.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SafetyPrecautions;\n","const helplineData = [\n  {\n    State: \"Andaman and Nicobar\",\n    Helpline: \"03192-232102\",\n  },\n  {\n    State: \"Andhra Pradesh\",\n    Helpline: \"0866-2410978\",\n  },\n  {\n    State: \"Arunachal Pradesh\",\n    Helpline: \"9436055743\",\n  },\n  {\n    State: \"Assam\",\n    Helpline: \"6913347770\",\n  },\n  {\n    State: \"Bihar\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Chandigarh\",\n    Helpline: \"9779558282\",\n  },\n  {\n    State: \"Chhattisgarh\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Dadra Nagar Haveli and Daman Diu\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Delhi \",\n    Helpline: \"011-22307145\",\n  },\n  {\n    State: \"Gujarat\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Haryana\",\n    Helpline: \"8558893911\",\n  },\n  {\n    State: \"Himachal Pradesh\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Jammu & Kashmir\",\n    Helpline: \"01912520982\",\n  },\n  {\n    State: \"Jharkhand\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Karnataka\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Kerala\",\n    Helpline: \"0471-2552056\",\n  },\n  {\n    State: \"Ladakh\",\n    Helpline: \"01982256462\",\n  },\n  {\n    State: \"Lakshadweep\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Madhya Pradesh\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Maharashtra\",\n    Helpline: \"020-26127394\",\n  },\n  {\n    State: \"Manipur\",\n    Helpline: \"3852411668\",\n  },\n  {\n    State: \"Meghalaya\",\n    Helpline: \"108\",\n  },\n  {\n    State: \"Mizoram\",\n    Helpline: \"102\",\n  },\n  {\n    State: \"Nagaland\",\n    Helpline: \"7005539653\",\n  },\n  {\n    State: \"Odisha\",\n    Helpline: \"9439994859\",\n  },\n  {\n    State: \"Puducherry\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Punjab\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Rajasthan\",\n    Helpline: \"0141-2225624\",\n  },\n  {\n    State: \"Sikkim\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Tamil Nadu\",\n    Helpline: \"044-29510500\",\n  },\n  {\n    State: \"Telangana\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Tripura\",\n    Helpline: \"0381-2315879\",\n  },\n  {\n    State: \"Uttarakhand\",\n    Helpline: \"104\",\n  },\n  {\n    State: \"Uttar Pradesh\",\n    Helpline: \"18001805145\",\n  },\n  {\n    State: \"West Bengal\",\n    Helpline: \"1800313444222\",\n  },\n];\n\nexport default helplineData;\n","import React, { Fragment } from \"react\";\nimport helplineData from \"../utils/helplineData\";\n\n//MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = makeStyles({\n  divider: {\n    marginBottom: 20,\n  },\n  heading: {\n    textAlign: \"center\",\n  },\n  maingrid: {\n    paddingLeft: 25,\n    paddingRight: 25,\n  },\n});\n\nconst Helpline = () => {\n  const classes = styles();\n  const rows = helplineData.map((data) => (\n    <TableRow key={data.State}>\n      <TableCell component=\"th\" scope=\"row\">\n        {data.State}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Typography variant=\"body2\">{data.Helpline}</Typography>\n      </TableCell>\n    </TableRow>\n  ));\n  return (\n    <Fragment>\n      <Typography\n        style={{ marginBottom: 10 }}\n        variant=\"h4\"\n        className={classes.heading}\n        gutterBottom\n      >\n        HELPLINES FOR EVERY STATE\n      </Typography>\n      <Typography\n        color=\"primary\"\n        className={classes.heading}\n        style={{ marginBottom: 10 }}\n        variant=\"h5\"\n      >\n        Central Helpline : +91-11-23978046\n      </Typography>\n      <Divider className={classes.divider} />\n      <Grid className={classes.maingrid} container spacing={3}>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>State</TableCell>\n                  <TableCell align=\"right\">Helpline</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rows}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Helpline;\n","import React from \"react\";\n\nconst LatestUpdates = () => {\n  return <div>LatestUpdates</div>;\n};\n\nexport default LatestUpdates;\n","import React, { useEffect, useState } from \"react\";\nimport { Doughnut, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Chart = () => {\n  const [stateData, setStateData] = useState([]);\n  useEffect(() => {\n    getStateData();\n  }, []);\n\n  const getStateData = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const data = response.data.slice(1);\n    setStateData(data);\n  };\n\n  //chart js\n  defaults.global.defaultFontColor = \"#212121\";\n  defaults.global.defaultFontFamily = \"Roboto\";\n  defaults.global.defaultFontSize = 12;\n\n  const labels = [];\n  const data = [];\n  stateData.forEach((state) => {\n    labels.push(state.State);\n    data.push(state.Cases);\n  });\n\n  //const finalData = data.sort((a, b) => b - a);\n\n  const colors = [\n    \"#00429d\",\n    \"#1f4ea3\",\n    \"#305ba9\",\n    \"#3e67ae\",\n    \"#4a74b4\",\n    \"#5681b9\",\n    \"#618fbf\",\n    \"#6d9cc4\",\n    \"#79a9c9\",\n    \"#85b7ce\",\n    \"#93c4d2\",\n    \"#a1d1d7\",\n    \"#b1dfdb\",\n    \"#c3ebde\",\n    \"#daf7e1\",\n    \"#ffeed3\",\n    \"#ffdcc6\",\n    \"#ffcab9\",\n    \"#ffb8ab\",\n    \"#ffa59e\",\n    \"#fd9291\",\n    \"#f78085\",\n    \"#f06f7a\",\n    \"#e75d6f\",\n    \"#dd4c65\",\n    \"#d23b5b\",\n    \"#c52a52\",\n    \"#b61849\",\n    \"#a60741\",\n    \"#93003a\",\n    // \"#9CB4E8\",\n    // \"#2E2D54\",\n    // \"#187882\",\n    // \"#46820B\",\n    // \"#6D2F02\",\n    // \"#1B74D7\",\n    // \"#96D2CC\",\n    // \"#36B2CC\",\n    // \"#425C70\",\n    // \"#BA5021\",\n    // \"#D1F68E\",\n    // \"#2F4278\",\n    // \"#2C741D\",\n    // \"#69238C\",\n    // \"#3BE6CF\",\n    // \"#9EA76C\",\n    // \"#6B3109\",\n    // \"#FAC57F\",\n    // \"#D75476\",\n    // \"#006F8B\",\n    // \"#E8BAE3\",\n    // \"#76A692\",\n    // \"#2D2541\",\n    // \"#94131A\",\n    // \"#8F9291\",\n    // \"#4A0593\",\n    // \"#9FA25E\",\n    // \"#D53A18\",\n    // \"#37E0F7\",\n    // \"#1D6425\",\n    // \"#10B395\",\n    // \"#DF2FF7\",\n  ];\n  const datasets = [\n    {\n      label: \"state data\",\n      backgroundColor: colors,\n      data: data,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n  };\n\n  return (\n    <div>\n      <Doughnut data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst CountryChart = () => {\n  const [countryData, setCountryData] = useState([]);\n  useEffect(() => {\n    getCountryData();\n  }, []);\n\n  const getCountryData = async () => {\n    const response = await axios.get(\"/api/covid19/World\");\n    const data = response.data.slice(1, 19);\n    const res = await axios.get(\"/api/covid19/India\");\n    const india = res.data[res.data.length - 3];\n    data.push({\n      Country: india.State,\n      Cases: india.Cases,\n      Deaths: india.Deaths,\n      Recovered: india.Recovered,\n    });\n    setCountryData(data);\n  };\n\n  //chart js\n\n  const labels = [];\n  const data = [];\n  countryData.forEach((country) => {\n    labels.push(country.Country);\n    const cases = country.Cases.replace(/,/g, \"\");\n    data.push(parseInt(cases, 10));\n  });\n\n  console.log(data);\n  const colors = [\n    \"#ff0000\",\n    \"#ff2c00\",\n    \"#ff4100\",\n    \"#ff5000\",\n    \"#ff5d00\",\n    \"#ff6900\",\n    \"#ff7400\",\n    \"#fe7e00\",\n    \"#fd8900\",\n    \"#fa9400\",\n    \"#f79e00\",\n    \"#f2a900\",\n    \"#edb300\",\n    \"#e6be00\",\n    \"#ddc800\",\n    \"#d0d300\",\n    \"#bfdf00\",\n    \"#a2ec00\",\n    \"#00ff00\",\n  ];\n  const datasets = [\n    {\n      label: \"country data\",\n      backgroundColor: colors,\n      data: data,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <Bar data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default CountryChart;\n","import React, { useEffect, useState } from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst DeathRecoveredChart = () => {\n  const [dataDeaths, setDataDeaths] = useState([]);\n  const [dataRecovered, setDataRecoverd] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    const response = await axios.get(\"/api/covid19/IndiaTS\");\n    const dataDeaths = response.data.map((item) => {\n      const container = {};\n      container.Date = item.Date.slice(5);\n      container.Cases = item.Deaths;\n      return container;\n    });\n    const dataRecovered = response.data.map((item) => {\n      const container = {};\n      container.Date = item.Date.slice(5);\n      container.Cases = item.Recovered;\n      return container;\n    });\n    setDataDeaths(dataDeaths);\n    setDataRecoverd(dataRecovered);\n  };\n\n  const labels = [];\n  const dataOfDeaths = [];\n  const dataOfRecovered = [];\n  dataDeaths.forEach((ts) => {\n    labels.push(ts.Date);\n    const deaths = ts.Cases.replace(/,/g, \"\");\n    dataOfDeaths.push(parseInt(deaths));\n  });\n  dataRecovered.forEach((ts) => {\n    const recovered = ts.Cases.replace(/,/g, \"\");\n    dataOfRecovered.push(parseInt(recovered));\n  });\n\n  const datasets = [\n    {\n      label: \"Deaths\",\n      borderColor: \"#e83c00\",\n      backgroundColor: \"#e83c00\",\n      data: dataOfDeaths,\n      fill: false,\n    },\n    {\n      label: \"Recovered\",\n      borderColor: \"#497d00\",\n      backgroundColor: \"#497d00\",\n      data: dataOfRecovered,\n      fill: false,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const options = {\n    legend: {\n      display: true,\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: \"03-03\",\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <Line data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default DeathRecoveredChart;\n","import React, { useEffect, useState } from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst DailyCasesChart = () => {\n  const [dailyCasesData, setDailyCasesData] = useState([]);\n\n  useEffect(() => {\n    getDailyCasesData();\n  }, []);\n\n  const getDailyCasesData = async () => {\n    const response = await axios.get(\"/api/covid19/IndiaTS\");\n    let prev = response.data[0].Cases.replace(/,/g, \"\");\n    const data = response.data.map((item, index) => {\n      const container = {};\n      container.Date = item.Date.slice(5);\n      if (index === 0) {\n        container.Cases = item.Cases;\n      }\n      container.Cases = item.Cases.replace(/,/g, \"\") - prev;\n      prev = item.Cases.replace(/,/g, \"\");\n      return container;\n    });\n    console.log(data);\n    setDailyCasesData(data);\n  };\n\n  //chart js\n  console.log(dailyCasesData);\n\n  const labels = [];\n  const data = [];\n  dailyCasesData.forEach((daily) => {\n    labels.push(daily.Date);\n    const cases = daily.Cases;\n    data.push(parseInt(cases, 10));\n  });\n\n  console.log(data);\n\n  const datasets = [\n    {\n      label: \"Daily Cases\",\n      backgroundColor: \"rgba(0,60,100,1)\",\n      data: data,\n    },\n  ];\n\n  const dataset = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: \"03-03\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <Bar data={dataset} options={options} />\n    </div>\n  );\n};\n\nexport default DailyCasesChart;\n","import React, { useState } from \"react\";\nimport StateChart from \"../Components/Charts/StateChart\";\nimport CountryChart from \"../Components/Charts/CountryChart\";\nimport DeathRecoveredChart from \"../Components/Charts/DeathRecovereChart\";\nimport DailyCasesChart from \"../Components/Charts/DailyCasesChart\";\n\n//MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst DeepDive = () => {\n  return (\n    <Grid styles={{ paddingLeft: 25, paddingRight: 25 }} container spacing={3}>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={2000}>\n          <div>\n            <Paper>\n              <div style={{ padding: 10 }}>\n                <Typography\n                  style={{ textAlign: \"center\", marginBottom: 5 }}\n                  variant=\"body1\"\n                >\n                  Cases in Indian States\n                </Typography>\n                <StateChart />\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={3000}>\n          <div>\n            <Paper>\n              <div style={{ padding: 10 }}>\n                <Typography\n                  style={{ textAlign: \"center\", marginBottom: 5 }}\n                  variant=\"body1\"\n                >\n                  Cases in Most Affected Countries\n                </Typography>\n                <CountryChart />\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={4000}>\n          <div>\n            <Paper>\n              <div style={{ padding: 10 }}>\n                <Typography\n                  style={{ textAlign: \"center\", marginBottom: 5 }}\n                  variant=\"body1\"\n                >\n                  Deaths vs Recovered in India\n                </Typography>\n                <DeathRecoveredChart />\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Fade in={window.location.pathname === \"/DeepDive\"} timeout={4500}>\n          <div>\n            <Paper>\n              <div style={{ padding: 10 }}>\n                <Typography\n                  style={{ textAlign: \"center\", marginBottom: 5 }}\n                  variant=\"body1\"\n                >\n                  Daily Cases in India\n                </Typography>\n                <DailyCasesChart />\n              </div>\n            </Paper>\n          </div>\n        </Fade>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DeepDive;\n","import React, { useState, useEffect } from \"react\";\nimport Country from \"../Components/Country\";\nimport axios from \"axios\";\n\n//MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = makeStyles({\n  heading: {\n    textAlign: \"center\",\n  },\n  table: {\n    minWidth: 300,\n  },\n  subHeading: {\n    marginBottom: 15,\n  },\n  blockGrid: {\n    marginBottom: 10,\n  },\n  block: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: 70,\n  },\n  blockText: {\n    textAlign: \"center\",\n  },\n  dataText: {\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  divider: {\n    marginBottom: 20,\n  },\n  maingrid: {\n    paddingLeft: 25,\n    paddingRight: 25,\n  },\n});\nconst World = () => {\n  const classes = styles();\n\n  const [lastUpdate, setLastUpdate] = useState(\"\");\n\n  useEffect(() => {\n    getLastUpdate();\n  }, []);\n\n  const getLastUpdate = async () => {\n    const response = await axios.get(\"/api/covid19/India\");\n    const lastUpdate = response.data[response.data.length - 1].State;\n    setLastUpdate(lastUpdate);\n  };\n\n  return (\n    <div className={classes.maingrid}>\n      <Typography className={classes.heading} variant=\"h4\" gutterBottom>\n        COVID-19 TRACKER\n        <Typography variant=\"body2\">({lastUpdate})</Typography>\n      </Typography>\n      <Divider className={classes.divider} />\n      <Grid container spacing={3}>\n        <Country />\n      </Grid>\n    </div>\n  );\n};\nexport default World;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n//MUI\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { sizing } from \"@material-ui/system\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst styles = makeStyles({\n  button: {\n    marginLeft: 15,\n    marginRight: 15,\n  },\n});\n\nconst Navbar = () => {\n  const classes = styles();\n  return (\n    <AppBar className=\"nav\">\n      <Toolbar variant=\"dense\" className=\"nav-container\">\n        <Button\n          size=\"small\"\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/\"\n        >\n          <Tooltip title=\"Home\" placement=\"top\">\n            <IconButton color=\"inherit\">\n              <PublicIcon fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/\"\n        >\n          India\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/World\"\n        >\n          World\n        </Button>\n        <Button\n          size=\"small\"\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/DeepDive\"\n        >\n          Deep Dive\n        </Button>\n        <Button\n          size=\"small\"\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/SafetyPrecautions\"\n        >\n          Safety Precautions\n        </Button>\n        <Button\n          size=\"small\"\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/Helplines\"\n        >\n          Helplines\n        </Button>\n        <Button\n          size=\"small\"\n          className={classes.button}\n          color=\"inherit\"\n          component={Link}\n          to=\"/LatestUpdates\"\n        >\n          Latest Updates\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//Pages\nimport Home from \"./Pages/Home\";\nimport SafetyPrecautions from \"./Pages/SafetyPrecautions\";\nimport Helpline from \"./Pages/Helpline\";\nimport LatestUpdates from \"./Pages/LatestUpdates\";\nimport DeepDive from \"./Pages/DeepDive\";\nimport World from \"./Pages/World\";\n\n//Components\nimport Navbar from \"./Components/Navbar\";\n\n//MUI\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/LatestUpdates\">\n              <LatestUpdates />\n            </Route>\n            <Route path=\"/DeepDive\">\n              <DeepDive />\n            </Route>\n            <Route path=\"/Helplines\">\n              <Helpline />\n            </Route>\n            <Route path=\"/SafetyPrecautions\">\n              <SafetyPrecautions />\n            </Route>\n            <Route path=\"/World\">\n              <World />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}